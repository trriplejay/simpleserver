# Language setting
language: node_js

branches:
  only:
    - master

runtime:
  nodePool: c7-dyna
# Version number
node_js:
  - 6.11.0

env:
  matrix:
    #- environment=integration
    - environment=production
  global:
    - TEST=true
    - AMAZON_ECR_URL=412520076220.dkr.ecr.us-west-2.amazonaws.com
    - MYENV="im from env"
    - CONTAINER_ID=blank
    - STATE="starting"


build:
  pre_ci:
    - touch test.txt
    - echo "hello world" > test.txt
    - ls
    - docker ps -a
    - docker build -t trriplejay/test:latest -f TestDockerfile .
  #pre_ci_boot:
  #  image_name: drydock/u16nodall
  #  image_tag: v5.3.2
  #  options: "--net=host"
  #cache: true
  #cache_dir_list:
  #  - $SHIPPABLE_BUILD_DIR/node_modules
  ci:
    - cat runFT.sh | bash
#- netstat -tulpn
    #- CONTAINER_ID=$(docker run -d -p 127.0.0.1:8080:8888 trriplejay/simpleserver:master.58)
    #- sleep 5
    #- docker logs --tail=50 $CONTAINER_ID
    #- curl -XGET localhost:8080
    - echo $FAKE_VAR
    - echo "IS_PULL_REQUEST IS -> "$IS_PULL_REQUEST
    - echo "$HOME"
    - echo "$USER"
    #- npm install
    #- yarn install
    - sudo docker -v
    - sudo docker ps -a
    - MY_EB_ENV="test-environment"
    - echo "$environment.$SHIPPABLE_BUILD_NUMBER"
    - MYCI="im from ci"
    - MYENV="actually updated in ci!!"
    - echo "try again xxx"
    #- export AWS_DEFAULT_PROFILE=592719eacc9a750700ad3ec5
    #- aws configure list
    #- aws iam get-user
    - echo "build dir is-> $SHIPPABLE_BUILD_DIR"
    #- sudo apt-get install -y tree
    
    #- tree /build
    #- tree /tmp
    #- tree $SHIPPABLE_BUILD_DIR
    - docker ps -a

  post_ci:
    - echo "post_ci section"
    #- docker build -t trriplejay/simpleserver:$BRANCH.$BUILD_NUMBER .
    #- docker build -t trriplejay/simpleserver:$BRANCH.$BUILD_NUMBER --build-arg mytag=$environment.$BUILD_NUMBER .

    # GCR
    #- docker build -t gcr.io/sample-gke/simpleserver:$environment.$BUILD_NUMBER .
    #- gcloud docker -- push gcr.io/sample-gke/simpleserver:$environment.$BUILD_NUMBER


    # ECR
    #- docker tag trriplejay/simpleserver:$BRANCH.$BUILD_NUMBER $AMAZON_ECR_URL/trriplejaytest:$BRANCH.$BUILD_NUMBER
    #- docker push $AMAZON_ECR_URL/trriplejaytest:$BRANCH.$BUILD_NUMBER
    #- docker push trriplejay/simpleserver:$BRANCH.$BUILD_NUMBER
    - MYPOSTCI="im from post_ci"
    #- apt-get update
    #- apt-get install python-dev
    # need to upgrade botocore due to a problem with ebs
    #- pip install --upgrade botocore
    #- docker pull trriplejay/privateimg:latest
    
  push:
    - cd $SHIPPABLE_BUILD_DIR
    - ls
    - cat test.txt
    - docker ps -a
  on_success:
    - docker ps -a
    - sleep 2
    - docker ps -a
    - sleep 2
    - docker ps -a
    - sleep 2
    - docker ps -a
    - STATE="successful"
    - echo "huzzah!"
    
    #- docker rm -f $CONTAINER_ID
    
  on_failure:
    - STATE="failed"
    #- docker rm -f $CONTAINER_ID

integrations:
#   generic:
#     - integrationName: "my-aws-keys"
#   hub:
     #- integrationName: "trriplejay docker hub"
     #  type: docker
     #  branches:
     #    only:
     #      - master
 
     #- integrationName: "testGCRForRoles"
     #  type: gcr
     #  branches:
     #    only:
     #      - master
     #- integrationName: "trriplejay personal ecr"
     #  type: ecr
     #  region: us-west-1

  notifications:
   # - integrationName: test-hook
   #   type: webhook
   #   payload:
   #     - foo=$MYENV
   #     - bar=$STATE
   #   on_success: always
   #   on_failure: always
  #  - integrationName: irc
  #    type: irc
  #    recipients:
  #      - "irc.rizon.net#testshippable"
  #    branches:
  #      only:
  #        - master
  #    on_success: always
  #    on_failure: always
    #
    # - integrationName: "ci trigger for eb deploy"
    #   type: webhook
    #   payload:
    #     - versionName=$BRANCH.$BUILD_NUMBER
    #   on_success: always
    #   on_failure: never
 #   - integrationName: Email
 #     type: email
 #     recipients:
 #       - john@shippable.com
 #       - stockbauer@gmail.com
    #- integrationName: "test_payload"
    #  type: webhook
    #  payload:
    #    - state=$STATE
    #  on_success: always
    #  on_failure: always
    #  on_start: always



#    - integrationName: test_start_success
#      type: webhook
#      payload:
#        - ENV=$MYENV
#        - CI=$MYCI
#        - POSTCI=$MYPOSTCI
#        - BUILDNUM=$BUILD_NUMBER
#        - dummy=string
#      on_success: always
#      on_start: always

   #deploy:
   # - integrationName: "trriplejay personal aws"
   #   type: aws
   #   application_name: "trriplejayEBTest"
   #   env_name: $MY_EB_ENV
   #   region: "us-west-1"
   #   image_name: "trriplejay/simpleserver"
   #   image_tag: "$BRANCH.$SHIPPABLE_BUILD_NUMBER"
resources:
  - name: myRepo-ss
    type: gitRepo
    flags:
      - ss
    integration: "github"
    pointer:
      sourceName: trriplejay/simpleserver
      branch: master
      
jobs:
  - name: firstJob-ss
    type: runSh
    dependencyMode: strict
    flags:
      - ss
    steps:
      - IN: myRepo-ss
      - OUT: simpleserver_ciRepo
        replicate: myRepo-ss
      - TASK:
          script: 
            - echo "hello"
