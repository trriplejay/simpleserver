# Language setting
language: node_js

# Version number
node_js:
  - 6.11.0

build:

  ci:
    # - reqProcID=$(docker ps -q --filter name=reqProc)
    # - docker commit $reqProcID trriplejay/shipctlenv:latest
    # - ls /build
    # - sudo apt-get install -y tree
    # - tree /build
    # - cp -r /build .
    # - docker build -t trriplejay/shipctlenv:latest -f TempDockerfile .
    # - docker push trriplejay/shipctlenv:latest

    # test stuff
    - echo "wwwUrl is .${SHIPPABLE_WWW_URL}."
    - echo "buildUrl is  ${BUILD_URL}"
    - echo "API URL IS .${API_URL}. or .${SHIPPABLE_API_URL}."
    - printenv

    #set up payloads
    - pretext=`date`
    - text="Job $JOB_NAME build number $BUILD_NUMBER"
    - slack_payload="{\"username\":\"trriplejay\",\"attachments\":[{\"pretext\":\"${pretext}\n\",\"text\":\"${text}\n\"}],\"channel\":\"@trriplejay\"}"
    - echo "$slack_payload" > slack_payload.json
    - cat `pwd`/slack_payload.json
    - bad_slack_payload="{\"hello\":\"world\"}"
    - echo "$bad_slack_payload" > bad_slack_payload.json
    - cat `pwd`/bad_slack_payload.json
    - hook_payload="{\"hello\":\"world\"}"
    - echo "$hook_payload" > hook_payload.json
    - cat `pwd`/hook_payload.json
    - jq type `pwd`/hook_payload.json
    - curl --version

    # send notifications with --payload

    - shipctl notify mySlackNotifier --payload=`pwd`/slack_payload.json # valid
    - shipctl notify myWebhookPayload --payload=`pwd`/hook_payload.json # valid
    - shipctl notify mySlackNotifier --payload=`pwd`/slack_payload.json # valid
    - shipctl notify mySlackNotifier --payload=`pwd`/bad_slack_payload.json # bad payload for slack
    - shipctl notify mySlackNotifier || true # no payload check
    - shipctl notify badResource || true # no resource check
    - shipctl notify myIRC || true # not integration check
    - shipctl notify myDummyImage || true # not a notification resource check

    # send notifications by specifying individual options
    # defaults will be filled in for any non-specified options.
    #

    ### Slack

    - shipctl notify mySlackNotifier --text="build" --username="test1" # should send to all recipients in the resource
    - shipctl notify mySlackNotifier --text="hello world" --recipient="@trriplejay" # text with space does not work at this time.
    - shipctl notify mySlackNotifier # all defaults
    - shipctl notify mySlackNotifier --color="#ee5555" # should be reddish
    - shipctl notify mySlackNotifier --icon_url="https://i.imgur.com/Sdwl8jz.jpg" --pretext="turkeytime"

    ### Webhook
    - shipctl notify myWebhookPayload --text="build" --username="test1"
    - shipctl notify myWebhookPayload --text="hello world" --recipient="@trriplejay" # recipient is not supporeted for payload.
    - shipctl notify myWebhookPayload # all defaults
    - shipctl notify myWebhookPayload --color="#5555ee" # this key/value will be added, but will not have any effect.
    - shipctl notify myWebhookPayload --icon_url="https://i.imgur.com/Sdwl8jz.jpg" --pretext="turkeytime"

    ### ENVs
    - export NOTIFY_TEXT="text from an env"
    - export NOTIFY_PRETEXT="pretext from an env"
    - export NOTIFY_RECIPIENT="@trriplejay"
    - export NOTIFY_COLOR="#00ff00" # very green

    - shipctl notify mySlackNotifier
    - shipctl notify myWebhookPayload

    # back to defaults
    - export NOTIFY_TEXT=""
    - export NOTIFY_PRETEXT=""
    - export NOTIFY_RECIPIENT=""
    - export NOTIFY_COLOR=""

    - shipctl notify mySlackNotifier
    - shipctl notify myWebhookPayload

  post_ci:
    - echo "post_ci section"

  on_success:
    - echo "huzzah!"

  push:
    # - docker push gcr.io/sample-gke/simpleserver:$environment.$BUILD_NUMBER

integrations:
  hub:
    - integrationName: "trriplejay docker hub"
      type: dockerRegistryLogin
  # notifications:

    # - integrationName: imperialchat
    #   type: slack
    #   recipients:
    #     - "@trriplejay"
    #     - "#bot_scripts"
    #   on_success: always
    #   on_failure: never

    # - integrationName: "imperialchat failure"
    #   type: slack
    #   recipients:
    #     - "@trriplejay"
    #     - "#bot_scripts"
    #   on_success: never
    #   on_failure: always

    # - integrationName: email
    #   type: email
    #   recipients:
    #     - stockbauer@gmail.com

    #   on_success: always
    #   branches:
    #     only:
    #       - notifications

    # - integrationName: email
    #   type: email
    #   recipients:
    #     - stockbauer@gmail.com

    #   on_success: never
    #   on_failure: always
    #   branches:
    #     only:
    #       - notifications


resources:
  - name: myDummyImage
    type: image
    versionTemplate:
      sourceName: trriplejay/simpleserver
      versionName: master.58

  - name: mySlackNotifier
    type: notification
    integration: imperialchat
    versionTemplate:
      recipients:
        - "@trriplejay"
        - "#shippable_test"

  - name: myIRC
    type: notification
    versionTemplate:
      method: irc
      recipients:
        - "@trriplejay"
        - "#shippable"
        - "#imperialchat"

  - name: myWebhookPayload
    type: notification
    integration: testGenericHook
    versionTemplate:
      recipients:
        - "hmmm"

  - name: myParamsTest
    type: params
    versionTemplate:
      params:
        number: 12345
        numberstring: "12345"


jobs:
  - name: simpleserver_runCI
    type: runCI
    steps:
      - IN: mySlackNotifier
      - IN: myIRC
      - IN: myWebhookPayload
      - IN: myDummyImage

  - name: simpleserver_runSh
    type: runSh
    steps:
      - IN: mySlackNotifier
      - IN: myIRC
      - IN: myWebhookPayload
      - IN: myDummyImage
      - IN: myParamsTest
      - TASK:
          script:
            # - cat $JOB_STATE/../message.json | jq '.'
            # - echo "wwwUrl is $SHIPPABLE_WWW_URL"
            # - echo "buildUrl is  ${BUILD_URL}"
            # - echo "hello there"
            # - cat $JOB_STATE/myParamsTest.env
            - shipctl put_resource_state myParamsTest anotherNumber 54321
            - shipctl put_resource_state myParamsTest anotherNumberString "54321"
            - shipctl put_resource_state myParamsTest space "543 210"
            - echo "space value is .${space}."
            # - cat $JOB_STATE/myParamsTest.env
            # test stuff
            - echo "API URL IS .${API_URL}. or .${SHIPPABLE_API_URL}."
            #- printenv

            #set up payloads
            - $pretext = testpretext
            - $text = "Job $env:JOB_NAME build number $env:BUILD_NUMBER"
            - $slack_payload = "{\"username\":\"trriplejay\",\"attachments\":[{\"pretext\":\"${pretext}\n\",\"text\":\"${text}\n\"}],\"channel\":\"@trriplejay\"}"
            - echo "$slack_payload" > slack_payload.json
            - cat `pwd`/slack_payload.json
            - $hook_payload = "{\"hello\":\"world\"}"
            - echo "$hook_payload" > hook_payload.json
            - cat `pwd`/hook_payload.json
            - jq type `pwd`/hook_payload.json
            #- curl --version

            # send notifications

            - shipctl notify mySlackNotifier -payload slack_payload.json # valid
            - shipctl notify myWebhookPayload -payload hook_payload.json # valid
            - shipctl notify mySlackNotifier -payload slack_payload.json # valid
            - shipctl notify mySlackNotifier || true # no payload check
            - shipctl notify badResource || true # no resource check
            - shipctl notify myIRC || true # not integration check
            - shipctl notify myDummyImage || true # not a notification resource check

            # send notifications by specifying individual options
            # defaults will be filled in for any non-specified options.
            #

            ### Slack

            - shipctl notify mySlackNotifier --text="build" --username="test1" # should send to all recipients in the resource
            - shipctl notify mySlackNotifier --text="hello world" --recipient="@trriplejay" # text with space does not work at this time.
            - shipctl notify mySlackNotifier # all defaults
            - shipctl notify mySlackNotifier --color="#ee5555" # should be reddish
            - shipctl notify mySlackNotifier --icon_url="https://i.imgur.com/Sdwl8jz.jpg" --pretext="turkeytime"

            ### Webhook
            - shipctl notify myWebhookPayload --text="build" --username="test1"
            - shipctl notify myWebhookPayload --text="hello world" --recipient="@trriplejay" # recipient is not supporeted for payload.
            - shipctl notify myWebhookPayload # all defaults
            - shipctl notify myWebhookPayload --color="#5555ee" # this key/value will be added, but will not have any effect.
            - shipctl notify myWebhookPayload --icon_url="https://i.imgur.com/Sdwl8jz.jpg" --pretext="turkeytime"

            ### ENVs
            - export NOTIFY_TEXT="text from an env"
            - export NOTIFY_PRETEXT="pretext from an env"
            - export NOTIFY_RECIPIENT="@trriplejay"
            - export NOTIFY_COLOR="#00ff00" # very green

            - shipctl notify mySlackNotifier
            - shipctl notify myWebhookPayload

            # back to defaults
            - export NOTIFY_TEXT=""
            - export NOTIFY_PRETEXT=""
            - export NOTIFY_RECIPIENT=""
            - export NOTIFY_COLOR=""

            - shipctl notify mySlackNotifier
            - shipctl notify myWebhookPayload